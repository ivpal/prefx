buildscript {
    ext {
        assertjVersion = "3.19.0"
        jacksonVersion = "2.12.0"
        junitVersion = "5.7.1"
        logbackVersion = "1.2.3"
        restAssuredVersion = "4.3.3"
        testcontainersVersion = "1.15.2"
        vertxVersion = "4.0.3"
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'com.google.cloud.tools.jib' version '2.8.0'
}

group 'com.github.ivpal'
version '0.0.1'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "io.vertx:vertx-core:${vertxVersion}"
    implementation "io.vertx:vertx-ignite:${vertxVersion}"
    implementation "io.vertx:vertx-web:${vertxVersion}"
    implementation "io.vertx:vertx-config:${vertxVersion}"

    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("io.vertx:vertx-junit5:${vertxVersion}")
    testImplementation("io.rest-assured:rest-assured:${restAssuredVersion}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("org.testcontainers:junit-jupiter:${testcontainersVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = "adoptopenjdk/openjdk11:ubi-minimal-jre"
    }
    to {
        image = "ivpal/prefx"
        tags = ['0.0.1', 'latest']
    }
    container {
        mainClass = 'com.github.ivpal.prefx.Application'
        ports = ['8000']
    }
    allowInsecureRegistries = true
}

tasks.shadowJar.dependsOn tasks.jibDockerBuild
